export default class Player {
    constructor(scene, x, y) {
        this.scene = scene;

        // –°–æ–∑–¥–∞–µ–º —Ñ–∏–∑–∏—á–µ—Å–∫–∏–π —Å–ø—Ä–∞–π—Ç
        this.sprite = scene.physics.add.sprite(x, y, 'player_idle');
        this.shadow = scene.add.sprite(this.sprite.x, this.sprite.y + 10, 'shadow').setScale(0.3).setAlpha(0.3);
        this.shadow.setDepth(-1);
        this.stepParticles = scene.add.particles(0, 0, 'flares', {
            frame: 'red',
            speed: { min: 100, max: 260 },
            scale: { start: 0.1, end: 0.3 },
            alpha: { start: 0.6, end: 0 },
            lifespan: 200,
            frequency: 50, // —á–∞—Å—Ç–æ—Ç–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è
            tint: [0xff0033,],
            follow: this.sprite, // —Å–ª–µ–¥—è—Ç –∑–∞ –∏–≥—Ä–æ–∫–æ–º
            followOffset: { x: 0, y: 0 }, // —Å–º–µ—â–µ–Ω–∏–µ –≤–Ω–∏–∑ (–∫–∞–∫ –±—ã –æ—Ç –Ω–æ–≥)
            blendMode: 'DIFFERENCE'
        }).setDepth(-1);
        this.sprite.setCollideWorldBounds(true);

        // –ö–∞–º–µ—Ä–∞ —Å–ª–µ–¥—É–µ—Ç –∑–∞ –∏–≥—Ä–æ–∫–æ–º
        scene.cameras.main.startFollow(this.sprite);

        // –ö–ª–∞–≤–∏—à–∏
        this.cursors = scene.input.keyboard.createCursorKeys();

        // –¢–µ–∫—É—â–µ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ (—á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é –∫–∞–∂–¥—ã–π —Ç–∏–∫)
        this.currentAnim = null;
    }

    update() {
        const speed = 250;

        let moveX = 0;
        let moveY = 0;

        if (this.cursors.left.isDown) {
            moveX = -1;
        } else if (this.cursors.right.isDown) {
            moveX = 1;
        }

        if (this.cursors.up.isDown) {
            moveY = -1;
        } else if (this.cursors.down.isDown) {
            moveY = 1;
        }

        // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–æ–Ω–∞–ª–µ–π
        const len = Math.hypot(moveX, moveY);
        if (len > 0) {
            moveX /= len;
            moveY /= len;
        }

        this.sprite.setVelocity(moveX * speed, moveY * speed);
        this.shadow.setPosition(this.sprite.x, this.sprite.y + 20);

        this.stepParticles.on = false; // –æ—Ç–∫–ª—é—á–µ–Ω–æ
        // –≤ update particles
        if (this.sprite.body.velocity.x !== 0 || this.sprite.body.velocity.y !== 0) {
            this.stepParticles.on = true;
        } else {
            this.stepParticles.on = false;
        }





        // üé¨ –í—ã–±–æ—Ä –∞–Ω–∏–º–∞—Ü–∏–∏
        let newAnim = 'idle';

        if (moveX === 0 && moveY === 0) {
            newAnim = 'idle';
        } else {
            // –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Ç–æ–ª—å–∫–æ 4 –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
            if (moveY < 0 && moveX === 0) newAnim = 'walk_up';
            else if (moveY > 0 && moveX === 0) newAnim = 'walk_down';
            else if (moveX < 0 && moveY === 0) newAnim = 'walk_left';
            else if (moveX > 0 && moveY === 0) newAnim = 'walk_right';
            // üëá –ï—Å–ª–∏ —Ö–æ—á–µ—à—å 8 –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π ‚Äì –¥–æ–±–∞–≤—å —Å–≤–æ–∏ –∞–Ω–∏–º–∞—Ü–∏–∏:
            // else if (moveX < 0 && moveY < 0) newAnim = 'walk_up_left';
            // else if (moveX > 0 && moveY < 0) newAnim = 'walk_up_right';
            // else if (moveX < 0 && moveY > 0) newAnim = 'walk_down_left';
            // else if (moveX > 0 && moveY > 0) newAnim = 'walk_down_right';
        }

        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å
        if (this.currentAnim !== newAnim) {
            this.sprite.play(newAnim, true);
            this.currentAnim = newAnim;
        }
    }

    attackTextureOnce() {
        // –ø—Ä–∏–º–µ—Ä –∞–Ω–∏–º–∞—Ü–∏–∏ –∞—Ç–∞–∫–∏ ‚Äî –º–æ–∂–Ω–æ –ø–æ—Ç–æ–º —Ä–∞—Å—à–∏—Ä–∏—Ç—å
        // this.sprite.setTexture("player_attack");
        // this.scene.time.delayedCall(100, () => this.sprite.setTexture("player_idle"));
    }

    get x() { return this.sprite.x; }
    get y() { return this.sprite.y; }
    get body() { return this.sprite.body; }
    get active() { return this.sprite.active; }
    get gameObject() { return this.sprite; }
}